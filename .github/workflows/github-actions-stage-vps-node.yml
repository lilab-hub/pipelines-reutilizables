name: Push Stage Workflow VPS Node
on:
  workflow_call:
    inputs: 
      api-path:
        required: true
        type: string
      api-env:
        required: true
        type: string        
jobs:
  deploy-to-server:
      runs-on: ubuntu-latest
      environment: ${{ inputs.api-env }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Api Path
          run: |
            npm install
            npm run build
            echo ${{ vars.MICRO_SERVER_HOST }}
            echo ${{ vars.MICRO_SERVER_USER }}
            echo ${{ secrets.MICRO_SERVER_PASSWORD }}
        - name: Upload dist as artifact
          uses: actions/upload-artifact@v4
          with:
            name: dist
            path: dist
        - run: ls
        - name: Create Directory
          uses: appleboy/ssh-action@master
          env:
            REPO_NAME: ${{ github.repository }} 
          with:
            envs: REPO_NAME
            host: ${{ vars.MICRO_SERVER_HOST }}
            username: ${{ vars.MICRO_SERVER_USER }}
            password: ${{ secrets.MICRO_SERVER_PASSWORD }}
            port: 22
            script: |
             echo ${REPO_NAME}
             echo "Creando"
             export APP_NAME=${REPO_NAME}
             cd backend/
             APP_NAME=${REPO_NAME} mkdir -p $APP_NAME
        - run: ls
        - name: Copy files to server
          uses: appleboy/scp-action@master
          env:
            REPO_NAME: ${{ github.repository }}           
          with:
            host: ${{ vars.MICRO_SERVER_HOST }}
            username: ${{ vars.MICRO_SERVER_USER }}
            password: ${{ secrets.MICRO_SERVER_PASSWORD }}
            port: 22
            source: "dist/*,config/*"
            target: "/root/backend/${{ github.repository }}/"
            strip_components: 1

        - name: Execute PM2 start
          uses: appleboy/ssh-action@master
          env:
            REPO_NAME: ${{ github.repository }} 
            APP_PORT: ${{ vars.APP_PORT }}
            APP_ENV: ${{ inputs.api-env }}
            APP_DLL: ${{ vars.APP_DLL }}
            APP_PATH: ${{ vars.APP_PATH }}
          with:
            envs: REPO_NAME,APP_PORT,APP_ENV,APP_DLL,APP_PATH
            host: ${{ vars.MICRO_SERVER_HOST }}
            username: ${{ vars.MICRO_SERVER_USER }}
            password: ${{ secrets.MICRO_SERVER_PASSWORD }}
            port: 22
            script: |
             export APP_NAME=${REPO_NAME}
             export APP_PORT=${APP_PORT}
             export APP_PATH=${APP_PATH}
             export APP_ENV=${APP_ENV}
             export APP_DLL=${APP_DLL}
             echo ${APP_PATH}
             echo $APP_NAME
             echo $APP_PORT
             echo $APP_ENV
             echo $APP_DLL
             ls
             cd ${APP_PATH}
             ls
             pm2 startOrRestart backend.config.js
